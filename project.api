# Hero.h Room.h Stage.h Textures.h
!Hero.cpp Hero.h Room.h Textures.h cctype cerrno clocale cmath cstdint cstdio cstdlib ctype.h cwchar cwctype errno.h exception graphics.h initializer_list ios iosfwd iostream istream keys_n_colors.h limits limits.h locale.h math.h new ostream signal.h stddef.h stdexcept stdint.h stdio.h stdlib.h streambuf string string_view system_error type_traits typeinfo wchar.h wctype.h #<#>
!Hero.h Room.h Textures.h cctype cerrno clocale cmath cstdint cstdio cstdlib ctype.h cwchar cwctype errno.h exception graphics.h initializer_list ios iosfwd iostream istream keys_n_colors.h limits limits.h locale.h math.h new ostream signal.h stddef.h stdexcept stdint.h stdio.h stdlib.h streambuf string string_view system_error type_traits typeinfo wchar.h wctype.h #<#>
!Room.cpp Room.h Textures.h cctype cerrno clocale cmath cstdint cstdio cstdlib ctype.h cwchar cwctype errno.h exception graphics.h initializer_list ios iosfwd iostream istream keys_n_colors.h limits limits.h locale.h math.h new ostream signal.h stddef.h stdexcept stdint.h stdio.h stdlib.h streambuf string string_view system_error type_traits typeinfo wchar.h wctype.h #<#>
!Room.h Textures.h cctype cerrno clocale cmath cstdint cstdio cstdlib ctype.h cwchar cwctype errno.h exception graphics.h initializer_list ios iosfwd iostream istream keys_n_colors.h limits limits.h locale.h math.h new ostream signal.h stddef.h stdexcept stdint.h stdio.h stdlib.h streambuf string string_view system_error type_traits typeinfo wchar.h wctype.h #<#>
!Stage.cpp Stage.h Textures.h cctype cerrno clocale cmath cstdint cstdio cstdlib ctype.h cwchar cwctype errno.h exception graphics.h initializer_list ios iosfwd iostream istream keys_n_colors.h limits limits.h locale.h math.h new ostream signal.h stddef.h stdexcept stdint.h stdio.h stdlib.h streambuf string string_view system_error type_traits typeinfo wchar.h wctype.h #<#>
!Textures.cpp Textures.h cctype cerrno clocale cmath cstdint cstdio cstdlib ctype.h cwchar cwctype errno.h exception graphics.h initializer_list ios iosfwd iostream istream keys_n_colors.h limits limits.h locale.h math.h new ostream signal.h stddef.h stdexcept stdint.h stdio.h stdlib.h streambuf string string_view system_error type_traits typeinfo wchar.h wctype.h #<#>
!Textures.h cctype cerrno clocale cmath cstdint cstdio cstdlib ctype.h cwchar cwctype errno.h exception graphics.h initializer_list ios iosfwd iostream istream keys_n_colors.h limits limits.h locale.h math.h new ostream signal.h stddef.h stdexcept stdint.h stdio.h stdlib.h streambuf string string_view system_error type_traits typeinfo wchar.h wctype.h #<#>
!main.cpp Hero.h Room.h Stage.h Textures.h cctype cerrno clocale cmath cstdint cstdio cstdlib ctype.h cwchar cwctype errno.h exception graphics.h initializer_list ios iosfwd iostream istream keys_n_colors.h limits limits.h locale.h math.h new ostream signal.h stddef.h stdexcept stdint.h stdio.h stdlib.h streambuf string string_view system_error type_traits typeinfo wchar.h wctype.h #<#>
 struct@button _type_ #<Textures.h>
DrawStat(int x, int y, int stat) -> void #<Hero.h>
ES _type_ #<Room.h>
Enemy _type_ #<Room.h>
Hero _type_ #<Hero.h>
Hero() #<Hero.h>
Room _type_ #<Room.h>
Room() #<Room.h>
Stage _type_ #<Stage.h>
a : ES #<main.cpp>
about() -> void #<main.cpp>
b : int #<Textures.h>
bmpBASIC : IMAGE*[] #<Textures.h>
bmpEnemy : IMAGE*[] #<Textures.h>
bmpITEMS : IMAGE*[] #<Textures.h>
but : Button[] #<Textures.cpp>
button _type_ #<Textures.h>
draw_LoseOrWin(int x) -> void #<Textures.h>
draw_menu() -> void #<Textures.h>
game() -> void #<main.cpp>
init() -> void #<main.cpp>
init_ES(Enemy normal[]) -> void #<Room.h>
init_menu() -> void #<Textures.h>
main() -> int #<main.cpp>
menu(int st) -> int #<Textures.h>
rules() -> void #<main.cpp>
zastavka() -> void #<main.cpp>
	ES::mas : Enemy[][] #<Room.h>
	ES::nums : int[] #<Room.h>
	Enemy::xe : int #<Room.h>
	Enemy::ye : int #<Room.h>
	Enemy::eHP : int #<Room.h>
	Enemy::startHP : double #<Room.h>
	Enemy::eSpeed : int #<Room.h>
	Enemy::bmpe : IMAGE* #<Room.h>
	Hero:%fqq : int #<Hero.h>
	Hero:%x : int #<Hero.h>
	Hero:%y : int #<Hero.h>
	Hero:%Damage : int #<Hero.h>
	Hero:%HP : int #<Hero.h>
	Hero:%LenghtSpear : int #<Hero.h>
	Hero:%frameSpear : int #<Hero.h>
	Hero:%directionSpear : int #<Hero.h>
	Hero:%frameNoDamage : int #<Hero.h>
	Hero:%Speed : int #<Hero.h>
	Hero:%Items : IMAGE*[] #<Hero.h>
	Hero:%nextItem : int #<Hero.h>
	Hero::get_x() -> int #<Hero.h>
	Hero::get_y() -> int #<Hero.h>
	Hero::get_HP() -> int #<Hero.h>
	Hero::DamageMe(Enemy arr[4], int num) -> void #<Hero.h>
	Hero::DamageEnemy(Enemy arr[4]) -> void #<Hero.h>
	Hero::Move() -> void #<Hero.h>
	Hero::SpearAttack() -> void #<Hero.h>
	Hero::DrawHero() -> void #<Hero.h>
	Hero::DrawStats() -> void #<Hero.h>
	Hero::HeroDoor(int f[5], int ID) -> int #<Hero.h>
	Hero::DrawItems() -> void #<Hero.h>
	Room:%arr : Enemy* #<Room.h>
	Room:%num : int #<Room.h>
	Room:%open : int #<Room.h>
	Room::get_num() -> int #<Room.h>
	Room::get_open() -> int #<Room.h>
	Room::getArr() -> Enemy* #<Room.h>
	Room::initRoom(int x, ES a) -> void #<Room.h>
	Room::OpenRoom() -> void #<Room.h>
	Room::Moved(int x, int y) -> void #<Room.h>
	Room::printEnemys() -> void #<Room.h>
	Stage:%stage : int[][] #<Stage.h>
	Stage:%xi : int #<Stage.h>
	Stage:%yj : int #<Stage.h>
	Stage:%stagemap : int[][] #<Stage.h>
	Stage:%ItemID : int #<Stage.h>
	Stage:%f : int[] #<Stage.h>
	Stage::getRoom() -> int #<Stage.h>
	Stage::getItemID() -> int #<Stage.h>
	Stage::getF() -> int* #<Stage.h>
	Stage::printMap() -> void #<Stage.h>
	Stage::initStage() -> void #<Stage.h>
	Stage::printDoorsAndItems(int x) -> void #<Stage.h>
	Stage::StageMove(int x) -> int #<Stage.h>
	button::x : int #<Textures.h>
	button::y : int #<Textures.h>
	button::dx : int #<Textures.h>
	button::dy : int #<Textures.h>
	button::bmp : IMAGE* #<Textures.h>
